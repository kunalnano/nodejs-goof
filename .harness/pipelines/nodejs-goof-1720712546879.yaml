pipeline:
  identifier: Build_kunalnano_nodejs_goof_1720712549588
  name: Build nodejs-goof
  orgIdentifier: default
  projectIdentifier: default_project
  properties:
    ci:
      codebase:
        build: <+input>
        connectorRef: account.Github_OAuth_1720712151481
        repoName: kunalnano/nodejs-goof
  stages:
    - stage:
        identifier: build1
        name: build
        spec:
          caching:
            enabled: true
          cloneCodebase: true
          execution:
            steps:
              - step:
                  identifier: installdependencies
                  name: install dependencies
                  spec:
                    connectorRef: account.harnessImage
                    image: alsharma9/snyk_node_js_goof_app:latest
                    shell: Sh
                    command: |-
                      npm install
                      npm install -g @angular/cli
                      npm install -g snyk@latest

                      export SNYK_TOKEN=${SNYK_TOKEN} 
                      snyk auth ${SNYK_TOKEN}
                  timeout: ""
                  type: Run
              - step:
                  identifier: test
                  name: test
                  spec:
                    connectorRef: account.harnessImage
                    image: alsharma9/snyk_node_js_goof_app:latest
                    shell: Sh
                    command: |-
                      npm run test
                      npm install -g @angular/cli
                  timeout: ""
                  type: Run
              - step:
                  identifier: build
                  name: build
                  spec:
                    connectorRef: account.harnessImage
                    image: alsharma9/snyk_node_js_goof_app:latest
                    shell: Sh
                    command: npm run build
                  timeout: ""
                  type: Run
              - step:
                  identifier: dockerbuild
                  name: docker_build
                  spec:
                    caching: true
                    connectorRef: <+input>
                    repo: hello/world
                    tags:
                      - latest
                  timeout: ""
                  type: BuildAndPushDockerRegistry
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: harnessk8srancherconnector
              namespace: default
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
        type: CI
        delegateSelectors:
          - helm-delegate
        description: ""
  variables:
    - name: SNYK_TOKEN
      type: String
      description: Snyk Auth Token
      required: false
      value: bf000d3f-29a1-455d-9f54-d2d93d6d112c
